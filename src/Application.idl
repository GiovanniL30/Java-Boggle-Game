module App {

    struct User {
        string userID;
        string firstName;
        string lastName;
        string userName;
        string password;
        boolean isLoggedIn;
        string status;
    };

    struct Lobby {
        string lobbyId;
        string lobbyStatus;
        string dateCreated;
        string timeCreated;
        User topPlayer;
    };

    struct word{
        long wordId;
        string wordName;
    };

    struct Response {
        any payload;
        boolean isSuccess;
    };

    enum ClientActions {
        NEW_MESSAGE
    };

    interface Controller {
        void receiveUpdates(in ClientActions clientActions);
        void sendUpdates(in ClientActions clientActions);
        void updateWaitingLobbyView(in User user);
    };

  typedef sequence<Lobby> LobbyList;

    interface ApplicationServer {
        User login(in string userName, in string password, in Controller controller);
        void logout(in string userID);
        Response createLobby(in User creator);
        Response joinLobby(in User user, in string lobbyId);
        Response leaveLobby(in User user, in string lobbyId);
        LobbyList getLobbies();
    };

};
